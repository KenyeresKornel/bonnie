version: "2"
services:
  zookeeper:
    image: zookeeper:3.8.0-temurin
    container_name: "zookeeper"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    expose:
      - "2181"
  kafka:
    image: bitnami/kafka:3.3.1
    container_name: "kafka"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      ALLOW_PLAINTEXT_LISTENER: "true"
    expose:
      - "9092"
    depends_on:
      - zookeeper
    links:
      - zookeeper
  postgres_storage:
    image: postgres:latest
    restart: always
    container_name: "postgres_storage"
    environment:
      - POSTGRES_USER=${DB_ROOT_USERNAME}
      - POSTGRES_PASSWORD=${DB_ROOT_PWD}
    ports:
      - 5432:5432
    volumes:
      - postgres_storage: /var/lib/postgresql/data
  backend:
    image: bonnie-backend:latest
    container_name: "backend"
    environment:
      SPRING_KAFKA_BOOTSTRAP-SERVERS: kafka:9092
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/
      SPRING_DATASOURCE_USERNAME+${DB_USERNAME}"
      SPRING_DATASOURCE_PASSWORD: "${JASYPT_DB_DECRYPT_PWD}"
      JASYPT_ENCRYPTOR_PASSWORD: "${JASYPT_DB_CONNECTION_PWD}"
    depends_on:
      - kafka
      - postgres_storage
    links:
      - kafka
    ports:
      - 8082:8082
  frontend:
    image: bonnie-frontend:latest
    container_name: "frontend"
    ports:
      - 8081:80

  volumes:
    postgres_storage:
      driver: local